<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.github</groupId>
        <artifactId>spring-boot-app</artifactId>
        <version>1.0.0</version>
    </parent>
    <artifactId>spring-boot-web</artifactId>
    <version>1.0.0</version>
    <name>spring-boot-web</name>

    <properties>
        <java.version>1.8</java.version>
        <app.name>web-app</app.name>
        <docker.run.cmd>docker run --name web-app -d -p 8080:8080 -t image/spring-boot-web --restart=always
        </docker.run.cmd>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <!-- 通过 profile 来指定部署服务器 -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <profile.active>dev</profile.active>
                <ip.address>192.168.16.136</ip.address>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <profile.active>prod</profile.active>
                <ip.address>192.168.16.136</ip.address>
            </properties>
        </profile>
    </profiles>

    <build>
        <finalName>${app.name}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <!-- maven在打包时不会复制这些文件, 不希望把application-dev.properties也包含在prod的jar包 -->
                    <exclude>application*.properties</exclude>
                    <exclude>logback*.xml</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>logback.xml</include>
                    <include>application.properties</include>
                    <include>logback-${profile.active}.xml</include>
                    <include>application-${profile.active}.properties</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- 打包构建镜像 -->
            <!-- mvn clean package docker:build -->
            <!-- 运行 -->
            <!-- docker run &#45;&#45;name web-app -d -p 8080:8080 -t image/spring-boot-web &#45;&#45;restart=always -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <!-- 镜像名称 -->
                    <imageName>image/${project.artifactId}</imageName>
                    <!-- 依赖java镜像 -->
                    <baseImage>java</baseImage>
                    <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
                    <!-- Docker需要开启remove api的端口 -->
                    <dockerHost>http://${ip.address}:2375</dockerHost>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
